{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","login","credentials","console","log","Notification","message","type","notificationClass","className","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","notificationMessage","setNotificationMessage","notificationType","setNotificationType","blogTitle","setBlogTitle","blogAuthor","setBlogAuthor","blogUrl","setBlogUrl","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","handleLogin","event","preventDefault","loginService","setItem","stringify","setTimeout","handleLogout","removeItem","handleCreateBlog","blogObject","url","returnedBlog","concat","resetNewBlogForm","catch","error","Container","Form","onSubmit","Group","controlId","Label","Control","value","name","onChange","target","onClick","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9e60948.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs' //'/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n    const response = await axios.post(baseUrl, newObject, config)\n    return response.data\n}\n\nexport default { getAll, setToken, create }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  console.log(response.data)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport { Form, Container } from \"react-bootstrap\";\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst Notification = ({ message, type} ) => {\n  if (message === null) {\n    return null\n  }\n\n  let notificationClass = ''\n\n  if (type == 'success') {\n    notificationClass = 'success'\n  } else {\n    notificationClass = 'error'\n  }\n\n  return (\n    <div className={notificationClass}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationType, setNotificationType] = useState('')\n  const [blogTitle, setBlogTitle] = useState('')\n  const [blogAuthor, setBlogAuthor] = useState('')\n  const [blogUrl, setBlogUrl] = useState('')\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  // Check for logged in user on load\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInBloglistUser')  \n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedInBloglistUser', JSON.stringify(user)\n      )\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setNotificationMessage('Wrong credentials')\n      setNotificationType('error')\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n\n    }\n  }\n\n  // Logout by clearing the user cache item and user state\n  const handleLogout = async (event) => {\n    window.localStorage.removeItem('loggedInBloglistUser')\n    setUser(null)\n\n    setNotificationMessage('Logged out.')\n    setNotificationType('success')\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 5000)\n  }\n\n  const loginForm = () => (\n    <div>\n      <h2>Login to application</h2>\n      <Form onSubmit={handleLogin}>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </Form.Group>\n\n        <button type=\"submit\">Login</button>\n      </Form>\n    </div>\n  )\n\n  const blogList = () => (\n    <div>\n      <h2>List of blogs</h2>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n\n  const handleCreateBlog = (event) => {\n    event.preventDefault()\n\n    const blogObject = {\n      title: blogTitle,\n      author: blogAuthor,\n      url: blogUrl,\n    }\n\n    blogService.create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        resetNewBlogForm()\n      })\n      .catch(error => {\n        setNotificationMessage(`Error when creating blog: ${error}.`)\n        setNotificationType('error')\n        setTimeout(() => {\n          setNotificationMessage(null)\n        }, 5000)\n      })\n\n    setNotificationMessage(`A new blog ${blogTitle} by ${blogAuthor} has been added.`)\n    setNotificationType('success')\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 5000)\n\n  }\n\n  const resetNewBlogForm = () => {\n    setBlogAuthor('')\n    setBlogTitle('')\n    setBlogUrl('')\n  }\n\n\n\n  const createBlogForm = () => (\n    <div>\n      <h2>Create new blog</h2>\n      <Form onSubmit={handleCreateBlog}>\n        <Form.Group controlId=\"formBlogTitle\">\n        <Form.Label>Title</Form.Label>\n        <Form.Control \n          type=\"text\"\n          value={blogTitle}\n          name=\"BlogTitle\"\n          onChange={({ target }) => setBlogTitle(target.value)}\n        />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBlogAuthor\">\n        <Form.Label>Author</Form.Label>\n        <Form.Control \n          type=\"text\"\n          value={blogAuthor}\n          name=\"BlogAuthor\"\n          onChange={({ target }) => setBlogAuthor(target.value)}\n        />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBlogUrl\">\n        <Form.Label>URL</Form.Label>\n        <Form.Control \n          type=\"text\"\n          value={blogUrl}\n          name=\"BlogUrl\"\n          onChange={({ target }) => setBlogUrl(target.value)}\n        />\n        </Form.Group>\n\n        <button type=\"submit\">Create</button>\n      </Form>\n    </div>\n  )\n\n  return (\n    <Container>\n      <h1>Blogs</h1>\n      <Notification message={notificationMessage} type={notificationType} />\n      {user === null\n        ? loginForm() :\n        <div>\n          <p>{user.name} logged in. <button onClick={handleLogout}>Logout</button></p>\n          {createBlogForm()}\n          {blogList()}\n        </div>\n        \n      }\n    </Container>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}